package UI.CustomUIPanels;

/**
 *
 * @author awreynold
 */
public class DevicesPanel extends javax.swing.JPanel implements Interfaces.CustomPanelInterfaces{

    /**
     * Creates new form DevicesPanel
     */
    public DevicesPanel() {
        initComponents();
        ipAddrTextField.setText("000.000.000.000");
    }
    
    //================
    //behavior methods
    //================
    @Override
    public void enableAllElements(){
        ipAddrTextField.setEnabled(true);
        connectedDevicesTable.setEnabled(true);
        connectBtn.setEnabled(true);
        enableADBWifiBtn.setEnabled(true);
    }
    
    @Override
    public void disableAllElements(){
        ipAddrTextField.setEnabled(false);
        connectedDevicesTable.setEnabled(false);
        connectBtn.setEnabled(false);
        enableADBWifiBtn.setEnabled(false);
    }
    
    //==============
    //setter methods
    //==============
    /**
     * sets the passed in value to the text for the ipAddrTextField
     * @param val -> String representation of the value that should be set to the
     * ipAddrTextField
     */
    public void setIPAddrTextFieldValue(String val){
        ipAddrTextField.setText(val);
    }
    
    //==============
    //getter methods
    //==============
    /**
     * gets the value entered into the ipAddrTextField
     * @return String representation of the value that is set in the ipAddrTextField
     */
    public String getIPAddrTextFieldValue(){
        return ipAddrTextField.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        connectedDevicesTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        ipAddrTextField = new javax.swing.JTextField();
        connectBtn = new javax.swing.JButton();
        enableADBWifiBtn = new javax.swing.JButton();

        connectedDevicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Connected Devices"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        connectedDevicesTable.setColumnSelectionAllowed(true);
        connectedDevicesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(connectedDevicesTable);
        connectedDevicesTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (connectedDevicesTable.getColumnModel().getColumnCount() > 0) {
            connectedDevicesTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setText("Enter IP of Device:");

        connectBtn.setText("Connect");
        connectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBtnActionPerformed(evt);
            }
        });

        enableADBWifiBtn.setText("<html>Enabled ADB Over Wifi<br>on Selected Device</html>");
        enableADBWifiBtn.setActionCommand("<html>Enabled ADB Over Wifi<\\br>on Selected Device\nEnable ADB Over Wifi\non Selected Device");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ipAddrTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(connectBtn, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                    .addComponent(enableADBWifiBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipAddrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enableADBWifiBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBtnActionPerformed
        // TODO add your handling code here:
        String val = ipAddrTextField.getText();
    }//GEN-LAST:event_connectBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectBtn;
    private javax.swing.JTable connectedDevicesTable;
    private javax.swing.JButton enableADBWifiBtn;
    private javax.swing.JTextField ipAddrTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
